<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>八戒的技术博客</title>
    <link>https://bajie.dev/</link>
    <description>Recent content on 八戒的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2020-{year} Zhang Ranrui. All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 15 Jan 2023 10:05:11 +0800</lastBuildDate><atom:link href="https://bajie.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>运维方案之canal数据库同步</title>
      <link>https://bajie.dev/posts/20230115-canal_mysql/</link>
      <pubDate>Sun, 15 Jan 2023 10:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230115-canal_mysql/</guid>
      <description>普遍的大数据抽数的方式都是从散落在各个地方的 MySQL 数据库中开账号，然后把数据同步过来。 这不，大数据的同事提出了一个需求，想把某个库中的某个表的数</description>
    </item>
    
    <item>
      <title>seafile配搭onlyoffice的安装</title>
      <link>https://bajie.dev/posts/20230115-seafile_onlyoffice/</link>
      <pubDate>Sun, 15 Jan 2023 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230115-seafile_onlyoffice/</guid>
      <description>之前公司一直用的是 seafile 来保存文档，非常好用，也出过一次大事，一个离职的员工清空电脑，然后直接把sefaile文件夹也同步清空了，好在有版本，最</description>
    </item>
    
    <item>
      <title>traefik自动签发并续费证书&#43;端口转发</title>
      <link>https://bajie.dev/posts/20230131-traefik_certificate/</link>
      <pubDate>Sun, 15 Jan 2023 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230131-traefik_certificate/</guid>
      <description>nginx和traefik都可以做ingress，在入口处做证书的卸载，并转发tcp、udp、https、http流量 nginx是比较通常的</description>
    </item>
    
    <item>
      <title>cka的模拟试题</title>
      <link>https://bajie.dev/posts/20230112-cka_exam/</link>
      <pubDate>Thu, 12 Jan 2023 10:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230112-cka_exam/</guid>
      <description>刚通过了CKA的考试，拿到了证书。 说老实话，想考这个必须翻墙啊，在考试的时候正好是新冠的第三天，烧得正厉害。 然后考试的过程真是一波三折，PS</description>
    </item>
    
    <item>
      <title>xshell的绿色配色方案</title>
      <link>https://bajie.dev/posts/20230112-xshell_colors/</link>
      <pubDate>Thu, 12 Jan 2023 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230112-xshell_colors/</guid>
      <description>其实一直用的终端软件是terminus，全终端可用，以前用 ubuntu，非常好用。 现在换到新公司，用 Win10，也装了一个。 一直到机房改造前</description>
    </item>
    
    <item>
      <title>2022年获得的证书</title>
      <link>https://bajie.dev/posts/20230103-certificates/</link>
      <pubDate>Tue, 03 Jan 2023 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20230103-certificates/</guid>
      <description>2022年经过努力，考了4张证书，2023年继续努力奋斗&amp;hellip;&amp;hellip; 阿里云的ACP证书： AWS的SAA-C03证书： K8</description>
    </item>
    
    <item>
      <title>DNSMASQ配置PXE的方式</title>
      <link>https://bajie.dev/posts/20221222-dnsmasq_pxe/</link>
      <pubDate>Thu, 22 Dec 2022 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221222-dnsmasq_pxe/</guid>
      <description>DNSMASQ做局域网内的pxe installl是最合适不过的软件了。不用单独搭建 tftpserver，用自建的即可。 而且支持给各种子网打标</description>
    </item>
    
    <item>
      <title>Dropbear配置SSH服务</title>
      <link>https://bajie.dev/posts/20221219-dropbear/</link>
      <pubDate>Mon, 19 Dec 2022 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221219-dropbear/</guid>
      <description>合规审计经常需要给各种软件打补丁，比如openssh，如果是高版本还好说。如果让你补 centos 6的 openssh， 那恐怕就要喝一壶了。替代方案如下：</description>
    </item>
    
    <item>
      <title>docker镜像仓库harbor的搭建与使用</title>
      <link>https://bajie.dev/posts/20221219-docker_harbor/</link>
      <pubDate>Mon, 19 Dec 2022 09:04:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221219-docker_harbor/</guid>
      <description>一：我们在公司内部建立了Docker内部镜像仓库： harbor是vmware出的一个docker镜像仓库，本质是一组容器的集合体，算是一个多</description>
    </item>
    
    <item>
      <title>Docker的缺省网段冲突问题</title>
      <link>https://bajie.dev/posts/20221219-docker_network/</link>
      <pubDate>Mon, 19 Dec 2022 09:02:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221219-docker_network/</guid>
      <description>docker默认网段是172.17，和公司的网段172.16和172.18有时候会冲突，解决方法就是换docker网段。 方案：不改docke</description>
    </item>
    
    <item>
      <title>Dell服务器设置远程文件共享</title>
      <link>https://bajie.dev/posts/20221218-dell_idrac_remote_share/</link>
      <pubDate>Sun, 18 Dec 2022 09:07:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-dell_idrac_remote_share/</guid>
      <description>Dell服务器设置远程文件共享 用来加载iso文件，用于安装系统或者修复 输入172.18.31.2:/export/nfsshare/cent</description>
    </item>
    
    <item>
      <title>Dell机器主板VLT0204故障处理以及内存插法</title>
      <link>https://bajie.dev/posts/20221218-dell_memory/</link>
      <pubDate>Sun, 18 Dec 2022 09:06:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-dell_memory/</guid>
      <description>vlt0204, NDC瓦特超了，十有八九是网卡烧了，然后导致主板电压过载。 前面板日志：VLT0204，登录idrac看到日志： The system board NDC PG voltage is outside of range. 悲剧了，</description>
    </item>
    
    <item>
      <title>升级CentOS7的kernel核心</title>
      <link>https://bajie.dev/posts/20221218-centos7_upgrade_kernel/</link>
      <pubDate>Sun, 18 Dec 2022 09:05:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-centos7_upgrade_kernel/</guid>
      <description>CentOS7更新内核 内核下载地址：https://elrepo.org/linux/kernel/el7/x86_64/RPMS/ 内核包有</description>
    </item>
    
    <item>
      <title>合规要求之CentOS7的用户密码策略</title>
      <link>https://bajie.dev/posts/20221218-centos7_passwd/</link>
      <pubDate>Sun, 18 Dec 2022 09:04:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-centos7_passwd/</guid>
      <description>各种合规要求中都对用户策略有着要求，什么PCI啊，上市审计啊，都有着密码复杂程度的要求： CentOS 7 的用户密码策略： 修改vi /etc/pam.d/system-auth 其中有一行： 1password requisite pam_pwquality.so try_first_pass local_users_only</description>
    </item>
    
    <item>
      <title>Dnsmasq配置一个域名对应多个ip</title>
      <link>https://bajie.dev/posts/20221219-dnsmqsq_multi_ip/</link>
      <pubDate>Sun, 18 Dec 2022 09:03:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221219-dnsmqsq_multi_ip/</guid>
      <description>一：介绍： DNSMasq主要用来解决内网DNS域名缓存、DHCP、网络启动和路由通告功能，我们主要是将DNSMasq作为内网DNS域名劫持使</description>
    </item>
    
    <item>
      <title>老版本cacti的图形filter突然失效的解决办法</title>
      <link>https://bajie.dev/posts/20221218-cacti_time_filter/</link>
      <pubDate>Sun, 18 Dec 2022 09:03:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-cacti_time_filter/</guid>
      <description>网络工程师选择网络设备的监控工具是老牌的cacti，当然作为系统工程师的我，还是觉得librenms是个好选择，但是，librenms会对网</description>
    </item>
    
    <item>
      <title>线上服务器出现多网关问题的处理</title>
      <link>https://bajie.dev/posts/20221218-multi_gateway/</link>
      <pubDate>Sun, 18 Dec 2022 09:02:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-multi_gateway/</guid>
      <description>线上服务器172.18.30.67 有4个网口 其中eno1和eno2是两个光纤万兆口，enp26s0f0和enp26s0f1是两个以太千兆网口</description>
    </item>
    
    <item>
      <title>114dns的ttl超时的教训</title>
      <link>https://bajie.dev/posts/20221218-dns_114/</link>
      <pubDate>Sun, 18 Dec 2022 09:01:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221218-dns_114/</guid>
      <description>114.114.114.114 这个DNS修改记录等待的生效时间非常的长，远远超出了TTL的时长，基本是你设置TTL时间的6倍。 这是上次我们割接得到的教训啊。我们要割接m</description>
    </item>
    
    <item>
      <title>Dell服务器用ssh方式划分磁盘Raid的方法</title>
      <link>https://bajie.dev/posts/20221219-dell_ssh_raid/</link>
      <pubDate>Sun, 18 Dec 2022 09:01:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221219-dell_ssh_raid/</guid>
      <description>首先ssh到idrac去，直接会进入racadm的界面 我们以2022年最新的dell机器为例，老的机器显示的东西不一致 1ssh 10.18.30.104 2Password: 3racadm&amp;gt;&amp;gt; 注意，shel</description>
    </item>
    
    <item>
      <title>Megacli操作磁盘的常用命令</title>
      <link>https://bajie.dev/posts/20221217-megacli/</link>
      <pubDate>Sat, 17 Dec 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221217-megacli/</guid>
      <description>这Megacli是操作磁盘Raid的常用软件，日常用的大多是dell家的机器，都是这软件，记录一下。 1#!/bin/sh 2#/opt/MegaRAID/MegaCli/MegaCli64 -PDList -a0 3/opt/MegaRAID/MegaCli/MegaCli64 -PDList -a0 | grep -A1 &amp;#34;Enclosure Device&amp;#34; 4 5# clear foreign disk 6#/opt/MegaRAID/MegaCli/MegaCli64 -cfgforeign -scan</description>
    </item>
    
    <item>
      <title>Oracle使用rman定时清除7天前的日志</title>
      <link>https://bajie.dev/posts/20221208-oracle_rman/</link>
      <pubDate>Thu, 08 Dec 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221208-oracle_rman/</guid>
      <description>这一篇正规的DBA看到肯定会呲之以鼻，但对于没有用过oracle的系统运维来说，就是必须知道的事情了。 公司的 Oracle 实例有两台数据库，定时用rma</description>
    </item>
    
    <item>
      <title>CoreDNS替代dnsmasq</title>
      <link>https://bajie.dev/posts/20221207-cordns_dnsmasq/</link>
      <pubDate>Wed, 07 Dec 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221207-cordns_dnsmasq/</guid>
      <description>CoreDNS是k8s的御用DNS解析软件 支持很多插件，各种DoH、DoT、gRPC ，各种特性，安装配置也十分简单 替代dnsmasq后，基本</description>
    </item>
    
    <item>
      <title>sed中的正则表达式用法</title>
      <link>https://bajie.dev/posts/20221207-sed_regex/</link>
      <pubDate>Wed, 07 Dec 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221207-sed_regex/</guid>
      <description>之前说过sed的高阶用法，其实普通情况下，正则是最常用的，下面就来说一下，用不到的就暂时不说 1^ # 匹配行开始，如：/^sed/匹配所有以sed</description>
    </item>
    
    <item>
      <title>Zabbix下发往钉钉告警</title>
      <link>https://bajie.dev/posts/20221130-zabbix_dingding/</link>
      <pubDate>Wed, 30 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221130-zabbix_dingding/</guid>
      <description>zabbix 是很熟悉的东西，但是实际上博主已经跳过了这个东西，直接蹦到 Prometheus 去了 但是，存在即合理，当下公司用的是这个，那么用就用吧，zabbix发到钉钉告</description>
    </item>
    
    <item>
      <title>kubernetes使用nfs做持久化卷存储</title>
      <link>https://bajie.dev/posts/20221124-k8s_nfs/</link>
      <pubDate>Thu, 24 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221124-k8s_nfs/</guid>
      <description>用NFS来做kubernetes的持久化卷虽然不是最佳实践，但存在即合理。在现在的公司就是这么用的，记录一下，可用但不是最佳。 一、搭建NFS</description>
    </item>
    
    <item>
      <title>钉钉告警发送</title>
      <link>https://bajie.dev/posts/20221123-dingding/</link>
      <pubDate>Wed, 23 Nov 2022 11:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221123-dingding/</guid>
      <description>1#!/usr/bin/env python 2#coding:utf-8 3 4#zabbix钉钉报警 5import requests 6import json 7import sys 8import os 9import datetime 10 11#这里是自己创建的机器人的webhook 12webhook=&amp;#34;https://oapi.dingtalk.com/robot/send?access_token=xxxxxx&amp;#34; 13 14user=sys.argv[1] 15text=sys.argv[3] 16data={ 17 &amp;#34;msgtype&amp;#34;: &amp;#34;text&amp;#34;, 18 &amp;#34;text&amp;#34;: { 19 &amp;#34;content&amp;#34;: text 20 }, 21 &amp;#34;at&amp;#34;: { 22 &amp;#34;atMobiles&amp;#34;:</description>
    </item>
    
    <item>
      <title>Freelancer之aws</title>
      <link>https://bajie.dev/posts/20221123-freelancer_aws/</link>
      <pubDate>Wed, 23 Nov 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221123-freelancer_aws/</guid>
      <description>客户发了一个需求如下： 1用shell 或者python3 控制aws去获取新IP、绑定IP到实例 这个就非常简单了，因为本身aws就提供pytho</description>
    </item>
    
    <item>
      <title>Freelancer之QRCode</title>
      <link>https://bajie.dev/posts/20221123-freelancer_qrcode/</link>
      <pubDate>Wed, 23 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221123-freelancer_qrcode/</guid>
      <description>客户发了一个需求如下： 1TODO: 在sortFiles中，获取最新的域名，生成二维码，覆盖QRCodePath图片 2TODO:将QRCodePath图</description>
    </item>
    
    <item>
      <title>MySQL数据库的备份和恢复之二</title>
      <link>https://bajie.dev/posts/20221122-mysqldump_binlog/</link>
      <pubDate>Tue, 22 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221122-mysqldump_binlog/</guid>
      <description>我们来说恢复的第二种情况，就是需要从binlog中指定位置恢复 binlog如何设置不说了，我们假设上次用mysqldump做过一次全量备份。</description>
    </item>
    
    <item>
      <title>MySQL数据库的备份和恢复之一</title>
      <link>https://bajie.dev/posts/20221121-mysqldump/</link>
      <pubDate>Mon, 21 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221121-mysqldump/</guid>
      <description>喜大普奔，干了一个月的MySQL DBA的工作，又学到了一部分知识。 记录一下，以备不时只需 mysqldump 的备份其实很麻烦，要考虑很多因素 备份时候不能锁表 恢</description>
    </item>
    
    <item>
      <title>OpenVPN客户端定制IP和路由</title>
      <link>https://bajie.dev/posts/20221119-openvpn_client/</link>
      <pubDate>Sat, 19 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221119-openvpn_client/</guid>
      <description>公司用的 OpenVPN ，研发部门和普通员工的权限不一样，技术部门需要访问服务器，普通员工则不需要 这样的话就需要根据用户定制路由了，技术部门推送特定的路由</description>
    </item>
    
    <item>
      <title>英语的符号表达</title>
      <link>https://bajie.dev/posts/20221117-sign/</link>
      <pubDate>Thu, 17 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221117-sign/</guid>
      <description>面试 infosys 的时候是一个印度老哥做考官，他问我的问题我是一句都听不懂的，确实是听不懂。 然后他把问题在 webex 中打出来我回答的。 其中有一个问题是：如何用C</description>
    </item>
    
    <item>
      <title>阿里云IPSec与锐捷路由器得连接</title>
      <link>https://bajie.dev/posts/20221115-ipsec/</link>
      <pubDate>Tue, 15 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221115-ipsec/</guid>
      <description>现在也开始搞起桌面运维了，其实还感觉蛮有意思的。 公司的主路由器是锐捷的NBR6205-E，作为IPSec的服务端，而阿里云作为客户端。 首先先</description>
    </item>
    
    <item>
      <title>L2TP VPN在CentOS7系统下的搭建</title>
      <link>https://bajie.dev/posts/20221113-l2tp_vpn/</link>
      <pubDate>Sun, 13 Nov 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221113-l2tp_vpn/</guid>
      <description>这是个很奇怪的事情，应聘了一家搞 CDN 的公司，结果上去看了一下根本不对路。就立刻辞了，但是发现它给员工开的 L2TP VPN 确实非常好用。 于是就自己也搭一个，</description>
    </item>
    
    <item>
      <title>Kafka的安装和验证</title>
      <link>https://bajie.dev/posts/20221113-kafka/</link>
      <pubDate>Sun, 13 Nov 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221113-kafka/</guid>
      <description>生产环境要用到kafka，记录一下安装过程，其实最重要的不是安装，而是使用。 时间节点是2022年7月10日，zookeeper的版本是3.4</description>
    </item>
    
    <item>
      <title>Python下Django环境的准备</title>
      <link>https://bajie.dev/posts/20221027-python_django/</link>
      <pubDate>Thu, 27 Oct 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221027-python_django/</guid>
      <description>其实本身自己是比较喜欢 javascripts 的，但是 Python 也是必须掌握的一项技能。 干 devops ansible 跟 python 也脱不了干系，所以准备用 django 开发一个自动上线的系统。 先准备一下 Python 以及 Django 的环</description>
    </item>
    
    <item>
      <title>Gitlab的CICD实际生产环境应用</title>
      <link>https://bajie.dev/posts/20221025-gitlab_cicd/</link>
      <pubDate>Tue, 25 Oct 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221025-gitlab_cicd/</guid>
      <description>Gitlab 和 Jenkins 一样，都是很流行的 CI/CD 工具，当然，本站之前推过国人自产的东西 onedev，那个也相当不错，但是用的人毕竟还是少，这回还是用大家都耳熟能详</description>
    </item>
    
    <item>
      <title>sed的进阶用法</title>
      <link>https://bajie.dev/posts/20221024-sed_advanced/</link>
      <pubDate>Mon, 24 Oct 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221024-sed_advanced/</guid>
      <description>sed 和 awk 以及 cut 算是常用工具了，sed的高级用法也需要知道一下 sed 里面有2个空间，一个是pattern space，一个是hold space，默认都</description>
    </item>
    
    <item>
      <title>iptables的基本用法</title>
      <link>https://bajie.dev/posts/20221024-iptables/</link>
      <pubDate>Mon, 24 Oct 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221024-iptables/</guid>
      <description>面试的时候经常会被问到 iptables 的问题，那么下面就运维角度来总结一下基本的用法。 看晕了吧，不要紧，我们关注上面的5个红色，5个链条，然后继续看下面的</description>
    </item>
    
    <item>
      <title>systemd与journalctl的双剑合璧</title>
      <link>https://bajie.dev/posts/20220925-awk_usage/</link>
      <pubDate>Wed, 19 Oct 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220925-awk_usage/</guid>
      <description>时代已经进化到 systemd 的年代了，service 应该是彻底没有市场了 systemd 的好处是写程序的时候再也不用 fork 甩脱父进程了，日志直接输出终端即可 对 java 来说也是个</description>
    </item>
    
    <item>
      <title>awk的用法</title>
      <link>https://bajie.dev/posts/20221019-systemctl/</link>
      <pubDate>Sun, 25 Sep 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20221019-systemctl/</guid>
      <description>awk 是比较强力的工具，跟cut和sed组合起来，会有意想不到的作用 举个简单例子，我们nginx的access.log如下： 1110.244.232.88 - - [12/Apr/2022:16:50:06 +0800] help.jjwxc.net &amp;#34;GET /user/article/248 HTTP/1.1&amp;#34; 200</description>
    </item>
    
    <item>
      <title>Ansible之等待服务状态变成成功</title>
      <link>https://bajie.dev/posts/20220729-ansible_until/</link>
      <pubDate>Fri, 29 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220729-ansible_until/</guid>
      <description>ansible的脚本中我们可能会要启动某项服务并等待，直到服务启动起来，然后再进行下一步 这个非常重要，我们举例来实验一下： 1- hosts: localhost 2 vars: 3 local__service: ssh 4</description>
    </item>
    
    <item>
      <title>LVM系统的Restore</title>
      <link>https://bajie.dev/posts/20220728-lvm_restore/</link>
      <pubDate>Thu, 28 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220728-lvm_restore/</guid>
      <description>在生产系统中使用LVM务必要注意lvm metadata的备份，曾经在京东的时候发生过虚机用了lvm的磁盘系统，然后虚机文件qcow2突然坏掉</description>
    </item>
    
    <item>
      <title>dmesg -T 无时间戳的解决方法</title>
      <link>https://bajie.dev/posts/20220725-dmesg_time/</link>
      <pubDate>Mon, 25 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220725-dmesg_time/</guid>
      <description>现在版本的 dmesg -T 都是带时间戳的。 但是老的机器，很有可能是没有 -T 这个参数的，直接 dmesg 是这样的： 这个时间戳是天书啊，这还算好的，好歹有。还有更差的，</description>
    </item>
    
    <item>
      <title>一次mongodb cpu很high的解决方法</title>
      <link>https://bajie.dev/posts/20220721-mongodb_cpu/</link>
      <pubDate>Thu, 21 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220721-mongodb_cpu/</guid>
      <description>接到同事的通知，说mongodb的cpu很高，下不去，看有什么办法。 看了一下图，cpu都99.4%了，确实很高： 登上机器，首先去看mongo</description>
    </item>
    
    <item>
      <title>Infrastructure as Code中packer的使用</title>
      <link>https://bajie.dev/posts/20220717-terraform/</link>
      <pubDate>Sun, 17 Jul 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220717-terraform/</guid>
      <description>先普及一下概念，Infrastructure as Code，也就是从代码开始定义整个网络环境、虚机、各种资源等等。 简单说就是在云上用代码来管理一</description>
    </item>
    
    <item>
      <title>Cisco设备自动执行和备份的脚本</title>
      <link>https://bajie.dev/posts/20220717-backup_cisco/</link>
      <pubDate>Sun, 17 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220717-backup_cisco/</guid>
      <description>在日常工作中我们经常要对 Cisco 的网络设备的配置进行备份，或者和 suricata 联动的时候要执行操作。 方法其实很简单，调用 python 的相应模块即可。 准备工作如下： 首选需</description>
    </item>
    
    <item>
      <title>用户态的NFS Server</title>
      <link>https://bajie.dev/posts/20220706-nfs_usermode/</link>
      <pubDate>Wed, 06 Jul 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220706-nfs_usermode/</guid>
      <description>NFS Server 很常用，但是坑也是巨大的。之前在京东运维 Hadoop 集群的时候碰到过脑裂，原因就是 NFS 引起的。 关键 NFS 是内核态的，一旦崩溃，那么客户端的所有命令，ls</description>
    </item>
    
    <item>
      <title>JavaScript 到底是如何执行的呢 -- JS的作原理</title>
      <link>https://bajie.dev/posts/20220621-javascripts_how_to_run/</link>
      <pubDate>Tue, 21 Jun 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220621-javascripts_how_to_run/</guid>
      <description>JavaScript 到底是如何工作的？ 一、工作原理 JavaScript到底是： 同步还是异步？ 单线程还是多线程？ JavaScript 中的一切都发生在 Execution Context （执行上下文）中 您可以假设</description>
    </item>
    
    <item>
      <title>Javascripts中if的优化</title>
      <link>https://bajie.dev/posts/20220615-javascripts_if/</link>
      <pubDate>Wed, 15 Jun 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220615-javascripts_if/</guid>
      <description>Javascripts 中的 if &amp;hellip; else 用起来倒是很方便，但是看起来就不舒服了 1if (true) { 2} 3 4if (true) { 5} 6 7if (true) { 8 if (true) { 9 if (true) { 10 } 11 } else { 12 } 13} else { 14} 上面看起来很闹心吧，下面</description>
    </item>
    
    <item>
      <title>Shell进阶技巧</title>
      <link>https://bajie.dev/posts/20220609-shell_tips/</link>
      <pubDate>Thu, 09 Jun 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220609-shell_tips/</guid>
      <description>Shell脚本的进阶技巧： 一、String 类的技巧 String类当作数组来使用，注意范围的下标，0:4，4最后要被踢掉，实际是0-3，共4个</description>
    </item>
    
    <item>
      <title>javascripts中的promise</title>
      <link>https://bajie.dev/posts/20220524-javascripts_promise/</link>
      <pubDate>Tue, 24 May 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220524-javascripts_promise/</guid>
      <description>一、基本概念 1. 异步 所谓 &amp;quot; 异步 &amp;ldquo;，简单说就是一个任务分成两段， 先执行第一段， 然后转而执行其他任务去， 等做好了准备， 再回过头执行第二</description>
    </item>
    
    <item>
      <title>javascripts中的map</title>
      <link>https://bajie.dev/posts/20220523-javascripts_map/</link>
      <pubDate>Mon, 23 May 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220523-javascripts_map/</guid>
      <description>Javascripts 中的 map 说到map，如果我们有循环的话，不停遍历，会把时间搞成 O(n)。如果有map，时间就变成了O(1)，所以还是相当有效率的。 map 是 ES2015 中新</description>
    </item>
    
    <item>
      <title>javascript的实际应用-fs模块</title>
      <link>https://bajie.dev/posts/20220522-javascirpts_fs/</link>
      <pubDate>Sun, 22 May 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220522-javascirpts_fs/</guid>
      <description>千里之行始于足下，javascript 模块漫天飞，能做的事也是五花八门。我们来实践一下 假设我们有一个文本文件，内容如下： 里面是一行行数据，我</description>
    </item>
    
    <item>
      <title>javascripts中的module</title>
      <link>https://bajie.dev/posts/20220521-javascripts_module/</link>
      <pubDate>Sat, 21 May 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220521-javascripts_module/</guid>
      <description>JavaScript Module 是什么 一个 JavaScript module 模块准确的说就是一个文件，它允许你把代码 export 导出来复用，这样别的 JavaScript 文件可以 import 这个文件把它作为库文件来使用了。 模块主要是用在工</description>
    </item>
    
    <item>
      <title>Javascripts之数组的reduce</title>
      <link>https://bajie.dev/posts/20220520-javascripts_reduce/</link>
      <pubDate>Fri, 20 May 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220520-javascripts_reduce/</guid>
      <description>研究一下 javascripts 的 reduce ，reduce 是既能改变 array 的 size，又能改变数值的函数，filter 是只能改变size，不能改变数值；而 map 是不能改变 size</description>
    </item>
    
    <item>
      <title>面试之Docker如何打出最小的镜像</title>
      <link>https://bajie.dev/posts/20220401-docker_mini_image/</link>
      <pubDate>Fri, 01 Apr 2022 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220401-docker_mini_image/</guid>
      <description>面试的时候被问到：如何才能让 docker 打出的镜像包尽量小？ 其实在生产已经尽量使用最小化的镜像包了，只是突然被问到还是有点懵圈；因为印象中自己基本是使</description>
    </item>
    
    <item>
      <title>面试之Nginx的epoll的优势</title>
      <link>https://bajie.dev/posts/20220401-nginx_epoll/</link>
      <pubDate>Fri, 01 Apr 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220401-nginx_epoll/</guid>
      <description>面试时被问到：是否了解 Nginx，它使用的 epoll 模式和其他的相比有什么优势？ 直接被问住，实际生产中配过不少的 Nginx，各种 rewrite、re</description>
    </item>
    
    <item>
      <title>Kubernetes下Flannel网络</title>
      <link>https://bajie.dev/posts/20220317-kubernetes_flannel/</link>
      <pubDate>Thu, 17 Mar 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220317-kubernetes_flannel/</guid>
      <description>现在各大公有云的 k8s 网络插件基本用的都是 vxlan，我们也需要对这个进行一下详细了解，以便用于公司的正式生产环境。 一、原理 首先，kuberne</description>
    </item>
    
    <item>
      <title>ucarp的安装配置</title>
      <link>https://bajie.dev/posts/20220225-ucarp/</link>
      <pubDate>Fri, 25 Feb 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220225-ucarp/</guid>
      <description>有 V2EX 的坛友问到如何静态编译 keepalived 的问题，实际上 keepalived 确实配置比较麻烦。那还有一个简单易行的 ucarp，生产也可以用这个。 ucarp 跟 keepalived 一样，都是用于高可用的</description>
    </item>
    
    <item>
      <title>gost tunnel的使用</title>
      <link>https://bajie.dev/posts/20220224-gost_tunnel/</link>
      <pubDate>Thu, 24 Feb 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220224-gost_tunnel/</guid>
      <description>用过了好几个 tunnel 工具软件，各有长处。 ghostunnel 是支持自定义 tls 证书加密的，这回用个更厉害的，支持各种代理链条的，gost 项目地址：https://git</description>
    </item>
    
    <item>
      <title>KVM下宿主机的目录直通到虚机</title>
      <link>https://bajie.dev/posts/20220223-kvm_passthrouth/</link>
      <pubDate>Wed, 23 Feb 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220223-kvm_passthrouth/</guid>
      <description>这个需求也很有点意思，DBA 要求做 MySQL 的卸载从库，数据量会很大，硬盘空间后期需要扩容，但是 cpu 反倒占的不多。 单独 MySQL 是无法限制其 CPU 核使用的，这样的</description>
    </item>
    
    <item>
      <title>如何用CPU挖Polygon网络的MATIC币</title>
      <link>https://bajie.dev/posts/20220222-eth_matic/</link>
      <pubDate>Tue, 22 Feb 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220222-eth_matic/</guid>
      <description>这是个严肃话题，正经挖以太币的话，很多的矿厂都是如果直接挖到以太币地址，那么必须挖到完整一个才允许提现，手续费还特高。 但是如果挖到以太链Po</description>
    </item>
    
    <item>
      <title>Grafana画出prometheus的图</title>
      <link>https://bajie.dev/posts/20220118-grafana_prometheus/</link>
      <pubDate>Tue, 18 Jan 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220118-grafana_prometheus/</guid>
      <description>公司要做阿里的小程序接入，需要通过测试，测试呢需要提供硬盘的监控报告，比如 iops 。 同事从网上找了一下，iops 监控原文如下：监控磁盘的 iops ，利用 linux</description>
    </item>
    
    <item>
      <title>Javascript的项目与babel和eslint</title>
      <link>https://bajie.dev/posts/20220104-javascript_babel_eslint/</link>
      <pubDate>Tue, 04 Jan 2022 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20220104-javascript_babel_eslint/</guid>
      <description>最近开始弄hubot，顺带也开始学习 javascript ，首先从单独一个 nodejs 项目开始： nvm 和 node 的安装使用在前面已经说过了： Nodejs多版本的安装与管理 新建一个项</description>
    </item>
    
    <item>
      <title>hubot集成企业微信&#43;jenkins&#43;ansible</title>
      <link>https://bajie.dev/posts/20211222-hubot_wechat/</link>
      <pubDate>Wed, 22 Dec 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211222-hubot_wechat/</guid>
      <description>Hubot是一个通用的聊天机器人，能和很多聊天软件集成，比如slack、rockchat、telegram、企业微信、IRC等。 公司用的是企</description>
    </item>
    
    <item>
      <title>nodejs多版本的安装与管理</title>
      <link>https://bajie.dev/posts/20211217-nodejs_nvm/</link>
      <pubDate>Fri, 17 Dec 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211217-nodejs_nvm/</guid>
      <description>最近在搞 JavaScripts，nodejs的版本满天飞，之前用的 nvm 管理的方法突然不能用了。 这里记录一下，比较新的 nvm 的安装使用方法： 下载安装</description>
    </item>
    
    <item>
      <title>Backblaze类S3免费免备案对象存储</title>
      <link>https://bajie.dev/posts/20211208-backblaze_usage/</link>
      <pubDate>Wed, 08 Dec 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211208-backblaze_usage/</guid>
      <description>S3 的桶存储可以用 minio 来模拟。 网上有个 Backblaze 的网站，提供 10GB 的免费空间，且如果是公网访问，1GB流量是免费的，如果前面套了 Cloudflare 的CDN，那基本是全免了。</description>
    </item>
    
    <item>
      <title>kubernetes下定制服务器503以及其他的403消息</title>
      <link>https://bajie.dev/posts/20211129-kubernetes_custom_503/</link>
      <pubDate>Mon, 29 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211129-kubernetes_custom_503/</guid>
      <description>kubernetes下定制 http 50x 以及 40x 服务器返回信息的话，如果用 Nginx 做 ingress，大家会很自然想到直接用 nginx 来定制： 1 error_page 500 502 503 504 /50x.html; 2 location = /50x.html { 3</description>
    </item>
    
    <item>
      <title>kubernetes下nginx ingress的限制</title>
      <link>https://bajie.dev/posts/20211129-kubernetes_nginx_ingress_limit/</link>
      <pubDate>Mon, 29 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211129-kubernetes_nginx_ingress_limit/</guid>
      <description>在 kubernetes 中，ingress 负责转发、融断和限流。 我们以 Nginx ingress 为例，讨论一下这方面的问题。 一、Nginx ingress黑白名单 这个很简单了，丢进黑名</description>
    </item>
    
    <item>
      <title>kubernetes搭建minio作为阿里OSS的Gateway</title>
      <link>https://bajie.dev/posts/20211126-kubernetes_minio_oss_gateway/</link>
      <pubDate>Fri, 26 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211126-kubernetes_minio_oss_gateway/</guid>
      <description>阿里的云的 OSS 并不是完全版本的 AWS S3 兼容。 我们如果需要用 S3 协议访问 OSS，就比较麻烦了。 所以搭建一个 minio 来做网关，代理OSS，minio 是基本兼容</description>
    </item>
    
    <item>
      <title>替代kubernetes crontab的神器kala</title>
      <link>https://bajie.dev/posts/20211125-kubernetes_crontab_kala/</link>
      <pubDate>Thu, 25 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211125-kubernetes_crontab_kala/</guid>
      <description>本来 k8s 的 crontab 是启动一个容器来运行的，很简单，如下： 1apiVersion: batch/v1beta1 2kind: CronJob 3metadata: 4 name: curl-cron 5spec: 6 schedule: &amp;#34;*/1 * * * *&amp;#34; 7 jobTemplate: 8 spec: 9 template: 10 spec: 11 containers: 12 - name: curl-cron 13 image: radial/busyboxplus:curl 14 imagePullPolicy: IfNotPresent 15 command: 16 - /bin/sh 17 - -c 18 -</description>
    </item>
    
    <item>
      <title>kubernetes的hpa和自定义指标hpa</title>
      <link>https://bajie.dev/posts/20211125-kubernetes_hpa/</link>
      <pubDate>Thu, 25 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211125-kubernetes_hpa/</guid>
      <description>kubernetes 的动态伸缩 HPA 是非常有用的特性。 我们的服务器托管在阿里云的 ACK 上，k8s 根据 cpu 或者 内存的使用情况，会自动伸缩关键 pod 的数量，以应对大流量的情形。</description>
    </item>
    
    <item>
      <title>ansible vault加密的使用</title>
      <link>https://bajie.dev/posts/20211124-ansible_vault/</link>
      <pubDate>Wed, 24 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211124-ansible_vault/</guid>
      <description>公司已经由 saltstack 全面转向了 ansible 。 用 ansible-playbook 执行各种任务的时候，需要登录主机，就必然涉及到主机 ssh 密码的输入。 最早我们是在 inventory 里做了定义： 1[deqin:vars] 2ansible_ssh_common_args=&amp;#34;-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null&amp;#34; 3host_key_checking=False 4ansible_ssh_user=&amp;#34;peadmin&amp;#34; 5ansible_ssh_pass=&amp;#34;Fuck2021!&amp;#34; 6 7[deqin]</description>
    </item>
    
    <item>
      <title>使用FreeIPA和FreeRadius搭建双因子认证服务器</title>
      <link>https://bajie.dev/posts/20211123-freeipa_freeradius/</link>
      <pubDate>Tue, 23 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211123-freeipa_freeradius/</guid>
      <description>审计啊审计，公司使用的华为防火墙需要配置双因子登录认证，这下麻烦了。 查了一下华为手册，支持 Radius 认证，那么没办法，最省钱的办法就是用 FreeIPA 和 FreeRadius 搭一套</description>
    </item>
    
    <item>
      <title>KVM下附加硬盘的passthrough直通</title>
      <link>https://bajie.dev/posts/20211119-kvm_disk_passthrough/</link>
      <pubDate>Fri, 19 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211119-kvm_disk_passthrough/</guid>
      <description>这个比较有意思，同事要存放 2TB 的数据，但是系统是 1.7TB 的 4 块 600G 盘组成的 Raid10。 很明显盘空间不够了，去库房找两块 10TB 的大盘组成 Raid1 给他用好了。 问题</description>
    </item>
    
    <item>
      <title>CentOS7的救援模式和紧急模式</title>
      <link>https://bajie.dev/posts/20211119-linux_rescue/</link>
      <pubDate>Fri, 19 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211119-linux_rescue/</guid>
      <description>说到 CentOS7 的紧急模式与救援模式，网上可以搜到漫天飞的帖子，说一下区别 RESCUE 救援模式： 救援模式启动的系统没有挂载硬盘，可以将硬盘 mount 出然后拷出数据。 EMERGENCY 紧</description>
    </item>
    
    <item>
      <title>linux下web pacproxy的用法</title>
      <link>https://bajie.dev/posts/20211116-pacproxy/</link>
      <pubDate>Tue, 16 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211116-pacproxy/</guid>
      <description>说实在话，这个场景非常怪异，客户在 linux 下要动态根据 url 选择代理： 看图，中间的是前端代理，地址是 192.168.1.1:8080，然后客户设置使用</description>
    </item>
    
    <item>
      <title>Tomcat server.xml配置详细解释</title>
      <link>https://bajie.dev/posts/20211115-tomcat_config/</link>
      <pubDate>Mon, 15 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211115-tomcat_config/</guid>
      <description>Tomcat 是一个 HTTP server。同时，它也是一个 serverlet 容器，可以执行 java 的 Servlet，也可以把 JavaServer Pages（JSP）和 JavaServerFaces（</description>
    </item>
    
    <item>
      <title>GlusterFS文件系统的优化</title>
      <link>https://bajie.dev/posts/20211115-gluster_tuning/</link>
      <pubDate>Mon, 15 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211115-gluster_tuning/</guid>
      <description>公司用了6年的GlusterFS终于到了要调整卷参数的地步了。 小文件已经多到要影响 IO 的地步了。 首先说一下结论，GlusterFS 安装完成后，</description>
    </item>
    
    <item>
      <title>Python的协程详细解释</title>
      <link>https://bajie.dev/posts/20211112-python_aiohttp/</link>
      <pubDate>Fri, 12 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211112-python_aiohttp/</guid>
      <description>在实际中遇到这样一个问题，公司软件发布上线自动化。 说简单点，就是需要去登录一个上线的内部网站，然后爬下所有的上线数据。 然后根据爬下来的数据整</description>
    </item>
    
    <item>
      <title>kubernetes使用filebeat multiline自定义收集日志</title>
      <link>https://bajie.dev/posts/20211111-k8s_filebeat/</link>
      <pubDate>Thu, 11 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211111-k8s_filebeat/</guid>
      <description>我们介绍了如何在 kubernetes 环境中使用 filebeat sidecar 方式收集日志 使用的是 filebeat 的 moudle 模块，但凡是常用的软件，基本都有对应的模块可用，所以我们首先应该使用模块来收集日志</description>
    </item>
    
    <item>
      <title>生产环境kubernetes使用持久化卷GlusterFS</title>
      <link>https://bajie.dev/posts/20211110-k8s_gfs/</link>
      <pubDate>Wed, 10 Nov 2021 12:50:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211110-k8s_gfs/</guid>
      <description>在生产环境使用 Kubernetes ，绕不过去的一个问题就是持久化卷。 如果是使用阿里 ACK 托管平台的话，可以用 OSS 来持久化卷，如果是自搭的 kubernetes，那么存</description>
    </item>
    
    <item>
      <title>kubernetes生产环境使用filebeat sidecar收集日志</title>
      <link>https://bajie.dev/posts/20211110-k8s_sidecar/</link>
      <pubDate>Wed, 10 Nov 2021 12:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211110-k8s_sidecar/</guid>
      <description>在生产环境中，ES 通常是不会在 k8s 集群中存在的，一般 MySQL 和 Elasticsearch 都是独立在 k8s 之外。 那么无论哪种 pod，要甩日志到 ES，最轻量的方案肯定是用 filebeat 甩过去了</description>
    </item>
    
    <item>
      <title>haproxy一个端口跑多个服务</title>
      <link>https://bajie.dev/posts/20211110-haproxy_multiple_port/</link>
      <pubDate>Wed, 10 Nov 2021 09:50:00 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211110-haproxy_multiple_port/</guid>
      <description>我们选择 haproxy 1.8 版本以上的，编译安装到路径 /export/servers/haproxy 1make TARGET=linux2628 PREFIX=/export/servers/haproxy USE_GETADDRINFO=1 USE_ZLIB=1 USE_REGPARM=1 USE_OPENSSL=1 \ 2 USE_SYSTEMD=1 USE_PCRE=1 USE_PCRE_JIT=1 USE_NS=1 3 4make install PREFIX=/export/servers/haproxy 编辑 haproxy.conf 配置文件： 1global 2 maxconn 5120 3 chroot /export/servers/haproxy 4 daemon 5 quiet 6 nbproc 2 7 pidfile /tmp/haproxy.pid 8 9defaults 10 timeout connect 5s 11 timeout</description>
    </item>
    
    <item>
      <title>sslh的一个端口同时跑多个服务</title>
      <link>https://bajie.dev/posts/20211110-sslh_multiple_port/</link>
      <pubDate>Wed, 10 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211110-sslh_multiple_port/</guid>
      <description>Ucloud的机器在两会期间干脆端口全灭，firewall设置进来的端口全关闭！！！！！！ 还好有个Global ssh的服务，可以 ssh ubuntu@111.129.37.89.ipssh.net 登录上去</description>
    </item>
    
    <item>
      <title>Nginx的一个端口同时跑SSH和HTTPS服务</title>
      <link>https://bajie.dev/posts/20211109-nginx_multiple_port/</link>
      <pubDate>Tue, 09 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211109-nginx_multiple_port/</guid>
      <description>这个要求挺古怪的，背景是防火墙只开了 nginx 443 端口。我也想同时 ssh 登录进去，但是F5没开IP 就只能这么干了，让 Nginx 一个端口跑多个服务 在 nginx.conf 加一段，str</description>
    </item>
    
    <item>
      <title>Kubernetes创建普通账号</title>
      <link>https://bajie.dev/posts/20211109-k8s_rbac/</link>
      <pubDate>Tue, 09 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211109-k8s_rbac/</guid>
      <description>kubernetes 装好正常运行一段时间后，会出现要把研发和运维权限分开的场景： 比如： 给某个用户某一指定名称空间下的管理权限 给用户赋予集群的只读权限 … 非常麻烦</description>
    </item>
    
    <item>
      <title>clash的搭建教程</title>
      <link>https://bajie.dev/posts/20211108-clash/</link>
      <pubDate>Mon, 08 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211108-clash/</guid>
      <description>没啊办法，翻墙翻墙还是翻墙。 上游有若干 trojian 、v2ray 、sock5 、http各种各样的代理，这样多种的选择，那么就装一个 clash 客户端就可以全接管了</description>
    </item>
    
    <item>
      <title>onedev构建一个实际java spring应用</title>
      <link>https://bajie.dev/posts/20211108-onedev_maven/</link>
      <pubDate>Mon, 08 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211108-onedev_maven/</guid>
      <description>上篇简单介绍了 onedev ，这篇我们具体拿个 java spring 的项目来实际编译一下 首先必须确认环境： onedev 和 agent 都是用 root 安装运行的，然后已经安装了 docker，且 selinux 设置为</description>
    </item>
    
    <item>
      <title>n2n一种peer to peer的VPN的使用</title>
      <link>https://bajie.dev/posts/20211105-n2n_vpn/</link>
      <pubDate>Fri, 05 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211105-n2n_vpn/</guid>
      <description>vpn的搭建一直是一个难解的题目，openvpn、ipsec、tinc 都在用，都不够简洁。 n2n 是一种 peer to peer 端到端的 vpn，搭建起来非常简单方便</description>
    </item>
    
    <item>
      <title>一站式Git软件onedev的安装使用</title>
      <link>https://bajie.dev/posts/20211105-onedev/</link>
      <pubDate>Fri, 05 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211105-onedev/</guid>
      <description>其实一直在用 github、gitlab、jenkins，但是 github 时不时的抽风， gitlab 的 runner 套 Docker in docker 的方法委实很难用。 所以 CI/CD 这一块反倒挺喜欢阿里云效这</description>
    </item>
    
    <item>
      <title>Haproxy的Zero downtime重启如何做</title>
      <link>https://bajie.dev/posts/20211104-haproxy_restart/</link>
      <pubDate>Thu, 04 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211104-haproxy_restart/</guid>
      <description>Nginx 可以用 kill -HUP 来重启，不会丢失已建连接。Haproxy 如何做才能做到 zero downtime 无缝重载呢？ 做法如下： 一、配置 编译harpoxy的时候带上参数 USE_</description>
    </item>
    
    <item>
      <title>alphine镜像的使用技巧</title>
      <link>https://bajie.dev/posts/20211104-alphine_usage/</link>
      <pubDate>Thu, 04 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211104-alphine_usage/</guid>
      <description>用 alphine 镜像的一些常用技巧： 会随时增加： 一、修改源，用国外的源非常慢，替换成国内的中科大源 1sed -i &amp;#39;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&amp;#39; /etc/apk/repositories 二、更新apk库 1apk update 三、安装软件 1#安装tel</description>
    </item>
    
    <item>
      <title>alphine镜像中timezone的设定</title>
      <link>https://bajie.dev/posts/20211103-alphine_timezone/</link>
      <pubDate>Wed, 03 Nov 2021 11:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211103-alphine_timezone/</guid>
      <description>我们都喜欢用 alphine 的镜像做底包，来生产自己的镜像 alphine 的底包的时间设定就非常重要了 直接给出 Dockerfile 1FROM alpine:3.12 2 3# latest certs 4RUN apk add ca-certificates --no-cache &amp;amp;&amp;amp; update-ca-certificates 5 6# timezone support 7ENV TZ=Asia/Shanghai 8RUN apk add --update tzdata --no-cache &amp;amp;&amp;amp;\ 9 cp</description>
    </item>
    
    <item>
      <title>生产环境Proxmox 7.02的安装和配置</title>
      <link>https://bajie.dev/posts/20211103-proxmox/</link>
      <pubDate>Wed, 03 Nov 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211103-proxmox/</guid>
      <description>其实我们的生产环境一直是 KVM ，然后用 shell 脚本控制虚机的生成，也是用到了 Cloud-init 的标准镜像。 听说 Proxmox 也很不错，于是想看看能否也在生产环境中用上 如果在生产环</description>
    </item>
    
    <item>
      <title>k8s中nginx ingress的性能优化</title>
      <link>https://bajie.dev/posts/20211102-ingress_nginx/</link>
      <pubDate>Tue, 02 Nov 2021 11:00:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211102-ingress_nginx/</guid>
      <description>kubernetes 中 nginx ingress 的优化分两部分 一、系统sysctl部分优化 首先是对nginx启动前的系统性能进行优化，这部分调整网络的缓冲区，减小闲置 socket 关闭的时间 以</description>
    </item>
    
    <item>
      <title>Linux内核sysctl内核参数优化</title>
      <link>https://bajie.dev/posts/20211102-sysctl_conf/</link>
      <pubDate>Tue, 02 Nov 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211102-sysctl_conf/</guid>
      <description>这篇是纯配置篇，解释都在配置里了，是生产服务器 sysctl.conf 的配置 1### KERNEL ### 2 3# Reboot after 10sec. on kernel panic 4kernel.panic = 10 5 6### IMPROVE SYSTEM MEMORY MANAGEMENT ### 7 8# Increase size of file handles and inode cache 9fs.file-max = 2097152 10 11# Insure we always have enough memory 12vm.min_free_kbytes</description>
    </item>
    
    <item>
      <title>Linux内核TCP连接Keep-Alive timeout的配置</title>
      <link>https://bajie.dev/posts/20211102-tcp_keealive/</link>
      <pubDate>Tue, 02 Nov 2021 09:00:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211102-tcp_keealive/</guid>
      <description>Custom Configuration of TCP Socket Keep-Alive Timeouts 这是个古老的话题，我们在机器的优化中，需要设置 TCP Socket 的 Timeout 参数 用来加快 TCP 关闭无用闲置连接的时间 Linux 内核中有三个缺省参数: 1 tcp_keepalive_time 缺省是 7200</description>
    </item>
    
    <item>
      <title>shell以及find的多线程执行</title>
      <link>https://bajie.dev/posts/20211029-bash_multithread/</link>
      <pubDate>Fri, 29 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211029-bash_multithread/</guid>
      <description>这属于Shell的高级技巧了，我们可能需要在 bash 中并发 wget rsync 文件，下面就讨论一下这个问题。 首先从简单的单线程开始： 1$ for i in $(seq 1 2); do echo $i; done 21 32 可以</description>
    </item>
    
    <item>
      <title>Linux下的程序限速软件Trickle</title>
      <link>https://bajie.dev/posts/20211028-trickle/</link>
      <pubDate>Thu, 28 Oct 2021 11:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211028-trickle/</guid>
      <description>之前讲过如何对 opnvpn 总体限速，这次来了一个更严格的程序限速需求： 场景如下： 两个机房间有一条专线 100M 两个机房间需要同步数据，同步需要限制到60M，给</description>
    </item>
    
    <item>
      <title>Dockerfile的编写与调试技巧</title>
      <link>https://bajie.dev/posts/20211028-dockerfile/</link>
      <pubDate>Thu, 28 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211028-dockerfile/</guid>
      <description>Dockerfile 是造出镜像的基础，是必须熟知并了解的知识： 一、编写Dockerfile 先给个例子，是 minio 代理访问阿里的 OSS 1FROM alpine:3.12 2 3RUN apk add --update bash &amp;amp;&amp;amp; rm -rf /var/cache/apk/* 4 5COPY minio.RELEASE.2020-04-15T19-42-18Z /data/minio.RELEASE.2020-04-15T19-42-18Z 6 7ENV</description>
    </item>
    
    <item>
      <title>PHP程序如何发送syslog到远程服务器</title>
      <link>https://bajie.dev/posts/20211028-php_syslog/</link>
      <pubDate>Thu, 28 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211028-php_syslog/</guid>
      <description>给同事做了个 PHP 接口，转发发送短信的请求，同时要把发送记录发送到远程的 cacti 的 syslog 去 很简单，但是也不简单 首先是 PHP 服务器，是最简化编译的，php -m 查了</description>
    </item>
    
    <item>
      <title>没有装Docker如何从镜像中释放出文件</title>
      <link>https://bajie.dev/posts/20211027-docker_extract_file/</link>
      <pubDate>Wed, 27 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211027-docker_extract_file/</guid>
      <description>用 kubernetes 越多，用 docker 越多，就愈发感觉到好处多多。 简简单单的一个可执行文件，用 docker 基板 alphine 封装，就可以运行起一个 pod ，然后指定 deployment、svc</description>
    </item>
    
    <item>
      <title>Bitwarden（vaultwarden）如何在非Docker环境下安装使用</title>
      <link>https://bajie.dev/posts/20211027-bitwarden/</link>
      <pubDate>Wed, 27 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211027-bitwarden/</guid>
      <description>为什么会有非 Docker 环境这个怪字眼呢？ 无他，因为满网搜索到的教程都是在 Docker 环境下安装使用。 但是穷啊，八戒的 vps 是个单核 500m 的 justhost 机器，便宜的很，这种廉价机</description>
    </item>
    
    <item>
      <title>阿里云ACK完全生产环境规划和搭建</title>
      <link>https://bajie.dev/posts/20211026-ack_build/</link>
      <pubDate>Tue, 26 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211026-ack_build/</guid>
      <description>在生产环境来创建阿里ACK托管k8s集群的过程： 完全用于生产，不是搭建来做测试用的。 授公司委托，给的RAM用户，所以阿里云RAM第一次登录后</description>
    </item>
    
    <item>
      <title>Centos auto install cdrom自动安装cdrom的制作</title>
      <link>https://bajie.dev/posts/20211025-autoinstall_cd/</link>
      <pubDate>Mon, 25 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211025-autoinstall_cd/</guid>
      <description>之前介绍过如何制作一个 centos live cdrom 系统 那么，某些情况下我们可能无法弄一个 pxe 系统，而只能通过 idrac 挂载 iso 的方式安装系统 该如何去做呢？ 步骤如下： 一、下载C</description>
    </item>
    
    <item>
      <title>vsftpd的日志设置</title>
      <link>https://bajie.dev/posts/20211025-vsftpd/</link>
      <pubDate>Mon, 25 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211025-vsftpd/</guid>
      <description>为了研发方便就给他们在内网开通了 vsftpd 的服务。 结果 java 直接有封好的 ftp library 可用，大家就直接用了。 导致任何单独的一个文件上传都会起一个 ftp 实例，没有复用 ftp</description>
    </item>
    
    <item>
      <title>PyPXE-一个牛逼的一站式PXE安装包</title>
      <link>https://bajie.dev/posts/20211022-pypxe/</link>
      <pubDate>Fri, 22 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211022-pypxe/</guid>
      <description>一般来说，我们要搭建一个正式的pxe自动装机系统，需要装 dnsmasq 做 dhcp + tftp ，需要编译 ipxe 来获得 undionly.kpxe ，需要 http 服务器来提供资源下载，repo 同步服务来提供 r</description>
    </item>
    
    <item>
      <title>ETCD &#43; CONFD &#43; NGINX的配置</title>
      <link>https://bajie.dev/posts/20211021-etcd_confd_nginx/</link>
      <pubDate>Thu, 21 Oct 2021 13:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211021-etcd_confd_nginx/</guid>
      <description>上一篇文章我们介绍了 ETCD 的容器化，搞这件事情的主要目的其实是要动态更新 Nginx 的配置 这一章我们就来配置 confd 和 Nginx，来达到动态更新 Nginx 配置的目的 一、</description>
    </item>
    
    <item>
      <title>etcd单节点应用</title>
      <link>https://bajie.dev/posts/20211021-etcd_docker/</link>
      <pubDate>Thu, 21 Oct 2021 11:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211021-etcd_docker/</guid>
      <description>由于使用到了阿里的 K8S 托管集群 ACK，于是想占便宜。想用到托管 master node 的 etcd 来保存数据。 结果是，未遂！！无法使用。 阿里有单独的配置管理服务，复杂化了</description>
    </item>
    
    <item>
      <title>Libguestfs的救援手段</title>
      <link>https://bajie.dev/posts/20211021-libguestfs/</link>
      <pubDate>Thu, 21 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211021-libguestfs/</guid>
      <description>在生产环境中我们大量使用了 kvm 的虚拟技术，虚拟机的镜像系统使用的是 Cloud-init 的技术 不可避免的，虚机会遭到各种损坏，维护的手段就十分必要了 假设我们有一个</description>
    </item>
    
    <item>
      <title>如何用CPU挖狗币Dogecoin</title>
      <link>https://bajie.dev/posts/20211021-dogecoin/</link>
      <pubDate>Thu, 21 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211021-dogecoin/</guid>
      <description>这是个娱乐话题，Dogecoin 狗币在马斯克的吹捧鼓动下，冲上云霄 其实真的用CPU挖币，应该是挖 xmb 门罗币才是对的选择，挖狗币只是娱乐一下 废话</description>
    </item>
    
    <item>
      <title>Chrony的几个详细配置细节</title>
      <link>https://bajie.dev/posts/20211020-chrony/</link>
      <pubDate>Wed, 20 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211020-chrony/</guid>
      <description>chrony 已经成了事实标准，替代了ntp。 但是，有几个细节，需要非常注意。 给出我们的配置，/etc/chrony.conf 1 2# Use public servers from the pool.ntp.org project. 3# Please consider joining</description>
    </item>
    
    <item>
      <title>ghostunnel使用TLS加密TCP流量</title>
      <link>https://bajie.dev/posts/20211019-ghostunnel/</link>
      <pubDate>Tue, 19 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211019-ghostunnel/</guid>
      <description>很现实的问题，局域网内有态势感知和网络流量分析，这很讨厌！ 那么，如何把某段流量隐藏起来，让态势感知无法分析呢？ 前提条件，你需要有国外的一台 VPS</description>
    </item>
    
    <item>
      <title>Certik 证书签发软件</title>
      <link>https://bajie.dev/posts/20211019-certik/</link>
      <pubDate>Tue, 19 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211019-certik/</guid>
      <description>我们会有很多时候需要用到TLS证书，一个非常方便、小众的工具就是 certik 。 这个软件纯由 Go 组成，就一个可执行文件，使用了 etcd 的 boltdb 格式存放所有的证书。 软</description>
    </item>
    
    <item>
      <title>使用IPSET封掉某个国家整个的访问</title>
      <link>https://bajie.dev/posts/20211018-ipset_block_cn/</link>
      <pubDate>Mon, 18 Oct 2021 10:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211018-ipset_block_cn/</guid>
      <description>现在国内都禁止挖币，什么币安、火币、cnspark之类的都不允许国内 IP 访问了。 如何实现的呢？ 首先需要得到国家IP段，下载地址：http://</description>
    </item>
    
    <item>
      <title>OpenVPN 限制流量带宽</title>
      <link>https://bajie.dev/posts/20211018-openvpn_limit_bandwidth/</link>
      <pubDate>Mon, 18 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211018-openvpn_limit_bandwidth/</guid>
      <description>公司安装了 openvpn ，带来方便，但是也有很多不便的地方，机房的总带宽就那么多。 很多人共用 vpn 的时候，就会抢占带宽。 那么，我们需要限制一下，限制 openvpn 所能使</description>
    </item>
    
    <item>
      <title>本站博客的由来以及搭建使用教程</title>
      <link>https://bajie.dev/posts/20211015-hugo_blog/</link>
      <pubDate>Fri, 15 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211015-hugo_blog/</guid>
      <description>本站这个博客的由来： 源自于 wiredcraft 的面试，这个公司让老八很是向往，可以远程工作，第一次面试是 devops ，老外见面聊了后，由代理中国人面。因为面的是K8S的</description>
    </item>
    
    <item>
      <title>Iphone手机的https抓包</title>
      <link>https://bajie.dev/posts/20211014-iphone_hijack/</link>
      <pubDate>Thu, 14 Oct 2021 09:35:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211014-iphone_hijack/</guid>
      <description>上一篇文章，我们实施了Ubuntu下wifi热点的搭建，那么，其实我是想抓我iphone手机的https明文流量包来着。 怎么抓取呢？ 方法也很</description>
    </item>
    
    <item>
      <title>Ubuntu下自建一个wifi热点供手机使用</title>
      <link>https://bajie.dev/posts/20211014-linux_wifi/</link>
      <pubDate>Thu, 14 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211014-linux_wifi/</guid>
      <description>公司的wifi信号很弱，也不保险。省事起见，还是自己建立一个好 usb无线网卡设备必须是一个 nl80211 兼容的无线设备，所以驱动就是这个：nl80211</description>
    </item>
    
    <item>
      <title>CentOS 7 Live-CD 的制作</title>
      <link>https://bajie.dev/posts/20211010-live_cd/</link>
      <pubDate>Sun, 10 Oct 2021 09:30:11 +0800</pubDate>
      
      <guid>https://bajie.dev/posts/20211010-live_cd/</guid>
      <description>某些场合，很有可能需要启动ISO或者USB盘，自带Linux系统，然后拯救当前损坏的系统 或者直接启动一个LIVE CentOS系统，去做某些事</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://bajie.dev/posts/markdown-syntax/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bajie.dev/posts/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://bajie.dev/posts/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bajie.dev/posts/untitled/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
